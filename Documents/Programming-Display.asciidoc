:Version: 4.3.1
:toc: macro
:toc-title: 目次
:toclevels: 4

= AMoAd SDK {version} Guide for Android

toc::[]

:numbered:
:sectnums:

== ディスプレイ広告
表示広告種類は、画像・テキスト・HTMLの有無によって、以下の3タイプあります

.広告の種類
[options="header"]
|===
|広告種類 |サイズ
.5+|バナー広告
.1+|320px x 50px
.1+|320px x 100px
.1+|300px x 100px
.1+|300px x 250px
.1+|728px x 90px
.2+|HTML広告
.1+|320px x 50px
.1+|320px x 100px
.1+|アイコン+テキスト広告
.1+|320px x 50px
|===

=== 表示(XML利用)
レイアウトに<com.amoad.AMoAdView .../>を追加する

.サンプルXML
[source, xml]
----
<LinearLayout ... >
    ...
    <com.amoad.AMoAdView
        android:id="@+id/banner"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:background="#000"
        xmlns:amoad="http://schemas.amoad.com/apk/res/android"
        amoad:click_transition="jump"
        amoad:rotate_transition="rotate"
        amoad:sid="管理画面から発行されるSIDを設定してください" />
    ...

</LinearLayout>
----

.sidとは
[TIP]
管理画面で広告枠を作成したときに発行されるIDです。
SDKの機能を呼び出すために複数の箇所から参照しますので、
文字列定数などに保持しておくことをお勧めします。

.タグの説明
[options="header"]
|===
|キー |値 |説明
.1+|xmlns:amoad 2+|"http://schemas.amoad.com/apk/res/android"（※必須）
.1+|amoad:sid 2+|管理画面から発行されるSIDを設定してください（※必須）
.6+|amoad:rotate_transition 2+|広告ローテーション時のトランジションを設定する
.1+|"none" |トランジション「なし」（デフォルト）
.1+|"alpha" |トランジション「透過」
.1+|"rotate" |トランジション「回転」
.1+|"scale" |トランジション「拡大」
.1+|"translate" |トランジション「スライド・アップ」
.3+|amoad:rotate_transition 2+|広告クリック時のトランジションを設定する
.1+|"none" |トランジション「なし」（デフォルト）
.1+|"jump" |トランジション「ジャンプ」
.1+|android:background 2+|最初の広告情報が取れるまでに表示する画像を設定する
|===

=== 表示(ソースコード利用)
. 本SDKでは広告の生成をソースコードで行うこともできます。 +
その場合でもシングルトン・パターンなどで生成を管理する必要はなく、 +
各画面に同じ固有IDを設定することで広告を内部的に共有します

.サンプルコード
[source, java]
----
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    AMoAdView amoadView == new AMoAdView(this);
    amoadView.setSid("管理画面から発行されるSIDを設定してください");
    amoadView.setRotateTransition(AMoAdView.RotateTransition.ALPHA);
    amoadView.setClickTransition(AMoAdView.ClickTransition.JUMP);

    ViewGroup content == (ViewGroup) findViewById(R.id.banner);
    content.addView(amoadView);
}
----

=== コールバック
広告の取得を通知する

.サンプルコード
[source, java]
----
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    AMoAdView amoadView == ((AMoAdView)findViewById(R.id.banner));

    amoadView.setCallback(new AdCallback() {
        @Override
        public void didReceiveAd() {
          //受信成功
        }
        @Override
        public void didFailToReceiveAdWithError() {
          //受信失敗
        }
        @Override
        public void didReceiveEmptyAd() {
          //広告が配信されてない
        }
    });
}
----

=== ローテーションの開始、停止
本SDKは、管理画面の「自動更新間隔」で指定された間隔で自動的に広告をローテーション表示します。 +
ローテーションさせたくない場合やAdMob広告ネットワークメディエーション等の外部機能で +
AMoAd SDKを制御する際は、管理画面の「自動更新間隔」に「0」を設定してください。


=== テスト検証について
. 組み込みが正しく行われたかどうかは、管理画面から発行されるsidを設定していただくことで、確認いただけます。
. 広告枠を作成いただくと、AMoAdで広告枠の審査を行わせていただきます。広告枠の審査が完了するまでは、以下のバナーが表示されます。 +
image:images/default_banner.png[width="400px"]

. 広告枠の審査が完了すると、広告主から提供されている広告が配信されるようになります。

=== デバッグ方法

.ログをコンソールに出力する
[source, java]
----
  AMoAdLogger.getInstance().setEnabled(true);
----

.SDKログをキャッチする
[source, java]
----
AMoAdLogger.getInstance().setEnabled(true);
AMoAdLogger.getInstance().addAMoAdLoggerListener(new AMoAdLoggerListener() {
 @Override
    public void onLog(int level, String tag, String msg, Throwable throwable) {
        // ログをキャッチする
    }
});
----
